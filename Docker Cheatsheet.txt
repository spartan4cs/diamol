Docker cheatsheet

ch01--------------------------------------------------------------------


 Remembering the cleanup commands
Docker doesn’t automatically clean up containers or application packages for you. When you quit Docker Desktop (or stop the Docker service), all your containers stop and they don’t use any CPU or memory, but if you want to, you can clean up at the end of every chapter by running this command:

docker container rm -f $(docker container ls -aq)

And if you want to reclaim disk space after following the exercises, you can run this command:

docker image rm -f $(docker image ls -f reference='diamol/*' -q)

Docker is smart about downloading what it needs, so you can safely run these commands at any time. The next time you run containers, if Docker doesn’t find what it needs on your machine, it will download it for you.




ch02--------------------------------------------------------------------

TRY IT NOW Enter this command, which will run the Hello World container:
docker container run diamol/ch02-hello-diamol

TRY IT NOW Repeat the exact same Docker command:
docker container run diamol/ch02-hello-diamol

TRY IT NOW Run the following command in your terminal session:
docker container run --interactive --tty diamol/base

TRY IT NOW Open up a new terminal session, and you can get details of all the running containers with this command:
docker container ls

TRY IT NOW docker container top lists the processes running in the container. I’m using f1 as a short form of the container ID f1695de1f2ec :
 > docker container top f1

TRY IT NOW docker container logs displays any log entries the container has collected:
 > docker container logs f1

TRY IT NOW docker container inspect shows you all the details of a container:
> docker container inspect f1

TRY IT NOW Run docker container ls --all , which shows all containers in any status:
> docker container ls --all


TRY IT NOW Here’s a simple example, running a website in a container:
docker container run --detach --publish 8088:80 diamol/ch02-hello- diamol-web


TRY IT NOW docker container stats is another useful one: it shows a live view of how much CPU, memory, network, and disk the container is using. The output is slightly different for Linux and Windows containers:
> docker container stats e53

TRY IT NOW Run this command to remove all your containers:
docker container rm --force $(docker container ls --all --quiet)







ch03-web-ping--------------------------------------------------------------------

TRY IT NOW Pull the container image for the web-ping application:
docker image pull diamol/ch03-web-ping

TRY IT NOW Let’s run a container from the image and see what the app does:
docker container run -d --name web-ping diamol/ch03-web-ping

TRY IT NOW Have a look at the logs from the application, which are being collected by Docker:
docker container logs web-ping

TRY IT NOW Remove the existing container, and run a new one with a value specified for the TARGET environment variable:
 docker rm -f web-ping
 docker container run --env TARGET=google.com diamol/ch03-web-ping

TRY IT NOW Turn this Dockerfile into a Docker image by running docker image build :
docker image build --tag web-ping 

TRY IT NOW List all the images where the tag name starts with “w”:
docker image ls 'w*'

TRY IT NOW Run a container from your own image to ping Docker’s website every five seconds:
docker container run -e TARGET=docker.com -e INTERVAL=5000 web-ping

TRY IT NOW Check the history for your web-ping image:
docker image history web-ping


